# mylist_testcases.txt

=========================
How to Use MyList
=========================

This module defines an inherited list class MyList.

Valid Test Cases
================

# Test Case 1
# Basic case with integers
::

    >>> my_list = MyList([3, 1, 4, 1, 5, 9])
    >>> my_list.print_sorted()
    [1, 1, 3, 4, 5, 9]

# Test Case 2
# Case with floating-point numbers
::

    >>> my_list = MyList([3.14, 2.71, 1.618])
    >>> my_list.print_sorted()
    [1.618, 2.71, 3.14]

# Test Case 3
# Case with mixed data types
::

    >>> my_list = MyList([5, "apple", 2.718, "banana"])
    >>> my_list.print_sorted()
    TypeError - '<' not supported between instances of 'str' and 'int'

# Test Case 4
# Case with an empty list
::

    >>> my_list = MyList([])
    >>> my_list.print_sorted()
    []

# Test Case 5
# Case with repeated elements
::

    >>> my_list = MyList([2, 1, 3, 2, 1, 3])
    >>> my_list.print_sorted()
    [1, 1, 2, 2, 3, 3]

Invalid Test Cases
==================

# Test Case 6
# Case with a mix of integers and strings
::

    >>> my_list = MyList([1, 2, "three", 4, "five"])
    TypeError - '<' not supported between instances of 'str' and 'int'

# Test Case 7
# Case with a single string element
::

    >>> my_list = MyList(["hello"])
    >>> my_list.print_sorted()
    ['hello']

# Test Case 8
# Case with None as an element
::

    >>> my_list = MyList([1, 2, None, 4])
    TypeError - '<' not supported between instances of 'NoneType' and 'int'

# Test Case 9
# Case with boolean values
::

    >>> my_list = MyList([True, False, True])
    >>> my_list.print_sorted()
    TypeError - '<' not supported between instances of 'bool' and 'int'

# Test Case 10
# Case with a mix of numbers and None
::

    >>> my_list = MyList([1, 2, None, 4, 5])
    TypeError - '<' not supported between instances of 'NoneType' and 'int'

